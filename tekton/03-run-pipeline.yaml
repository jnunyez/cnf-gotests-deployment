apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cnf-gotests
  annotations:
    argocd.argoproj.io/sync-wave: "4"
spec:
  params:
  - name: GIT_REPO
    type: string
    description: the clonable repo source e.g.
    default: git@github.com:redhat-partner-solutions/cnf-gotests.git
  - name: GIT_REF
    type: string
    description: git revision to checkout (branch, tag, sha, refâ€¦)
    default: vran_enablement
  - name: IMAGE_DEST
    type: string
    description: Base image repo url
    default: image-registry.openshift-image-registry.svc:5000/openshift/cnf-gotests
  - name: SRC_DOCKERFILE
    type: string
    description: path to the dockerfile to use
    default: Dockerfile
  - name: DEPLOY_REPO
    type: string
    description: Git repo where deployment manifests are
    default: git@github.com:jnunyez/cnf-gotests-deployment.git
  - name: DEPLOY_REF
    type: string
    description: git revision to checkout from deployment repo (branch)
    default: main
  - name: OVERLAY_DIR
    type: string
    description: directory where dev overlay is
    default: dev
  tasks:
  - name: clone-repo
    params:
    - name: url
      value: $(params.GIT_REPO)
    - name: revision
      value: $(params.GIT_REF)
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: cnf-gotests
  - name: set-image-tag
    params:
      - name: commit
        value: $(tasks.clone-repo.results.commit)
      - name: url
        value: $(tasks.clone-repo.results.url)
      - name: imagestream
        value: $(params.IMAGE_DEST)
    taskRef:
      name: set-tag
    runAfter:
      - clone-repo
    workspaces:
    - name: tagput
      workspace: cnf-gotests
  - name: build-n-push
    params:
      - name: IMAGE
        value: $(tasks.set-image-tag.results.tag)
      - name: DOCKERFILE
        value: $(workspaces.source.path)/$(params.SRC_DOCKERFILE)
      - name: CONTEXT
        value: $(workspaces.source.path)
    taskRef:
      name: buildah
      kind: ClusterTask
    runAfter:
      - set-image-tag
    workspaces:
    - name: source
      workspace: cnf-gotests
  - name: tag-to-latest
    params:
      - name: srcImageURL
        value: docker://$(tasks.set-image-tag.results.tag)
      - name: destImageURL
        value: docker://$(params.IMAGE_DEST):latest
    taskRef:
      name: skopeo-copy
      kind: ClusterTask
    runAfter:
      - build-n-push
    workspaces:
    - name: images-url
      workspace: cnf-gotests
  - name: clone-deployment-repo
    params:
    - name: url
      value: $(params.DEPLOY_REPO)
    - name: revision
      value: $(params.DEPLOY_REF)
    taskRef:
      name: git-clone
      kind: ClusterTask
    runAfter:
      - build-n-push
    workspaces:
    - name: output
      workspace: cnf-gotests
  - name: patch-dev
    taskRef:
      name: kustomize
    params:
      - name: imagestream
        value: $(tasks.set-image-tag.results.tag)
      - name: overlaypath
        value: overlays/$(params.OVERLAY_DIR)
    runAfter:
      - clone-deployment-repo
      - tag-to-latest
    workspaces:
      - name: source
        workspace: cnf-gotests
  - name: commit-to-dev
    params:
    - name: GIT_USER_NAME
      value: jnunyez
    - name: GIT_USER_EMAIL
      value: jonunyez@gmail.com
    - name: GIT_SCRIPT
      value: |
        git checkout -b $(tasks.set-image-tag.results.tagref)
        git add -A .
        git commit -am "Run $(tasks.set-image-tag.results.tagref): Updating image to $(tasks.set-image-tag.results.tag) on $(params.OVERLAY_DIR)"
        GIT_SSH_COMMAND="ssh -i /root/.ssh/id_ghkey -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" git push origin HEAD:main
    taskRef:
      name: git-cli
      kind: ClusterTask
    runAfter:
      - patch-dev
    workspaces:
    - name: source
      workspace: cnf-gotests
    - name: input
      workspace: scratch

  workspaces:
  - description: This workspace for this pipeline
    name: cnf-gotests
  - description: This is a scratch disk
    name: scratch